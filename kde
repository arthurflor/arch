#!/bin/bash
#-----------------------------------------------------------------------------
# Created by arthurflor mailto: arthurflor23[at]gmail[dot]com
# Run this script after your first boot with archlinux (as root)
#-----------------------------------------------------------------------------

## BEGIN ~ Collecting settings
clear
echo -e "Custom installer KDE Plasma\n"
echo -e "Permissions root and check the connection with Internet!\n"
echo -e "Language default: pt_br and hybrid graphics nvidia!\n\n"
read -p "All right? [y | n] " right
if   [ "$right" == "n" ]; then
    exit
fi

read -p "Username to continue installation: " user_name
read -p "The Arch Linux is the only SO present? [y | n]  " grub_sec
## END ~ Collecting settings

## BEGIN ~ Updating system and first packages
useradd -m -G users -s /bin/bash $user_name
passwd $user_name && usermod -a -G wheel $user_name

echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
sed -i "s/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/g" /etc/sudoers

echo -e "en_US.UTF-8 UTF-8" >> /etc/locale.gen && locale-gen
localectl set-x11-keymap br abnt2

pacman -Syu
pacman -S yajl namcap git wget expac base-devel bash-completion pkgstats arch-wiki-lite --needed --noconfirm

cd /tmp/ 
sudo -H -u $user_name bash -c "gpg --recv-keys --keyserver hkp://keyserver.ubuntu.com 1EB2638FF56C0C53"
sudo -H -u $user_name bash -c "git clone https://aur.archlinux.org/cower.git && cd cower && makepkg -i && cd -"
sudo -H -u $user_name bash -c "git clone https://aur.archlinux.org/pacaur.git && cd pacaur && makepkg -i && cd -"

git clone https://github.com/helmuthdu/dotfiles
sed -i 's/Java source/java/g' dotfiles/.nanorc
cp dotfiles/.bashrc dotfiles/.dircolors dotfiles/.dircolors_256 dotfiles/.nanorc ~/
cp dotfiles/.bashrc dotfiles/.dircolors dotfiles/.dircolors_256 dotfiles/.nanorc /home/$user_name/
sed -i 's/#Color/Color/g' /etc/pacman.conf
cd ~

pacman -S xorg-server xorg-server-utils xorg-xinit xorg-xkill xf86-video-intel --needed --noconfirm
pacman -S xf86-input-synaptics xf86-input-mouse xf86-input-keyboard --needed --noconfirm
pacman -S nvidia nvidia-settings nvidia-utils lib32-nvidia-utils bumblebee bbswitch primus lib32-primus --needed --noconfirm

pacman -S plasma breeze-kde4 kdebase-runtime kde-l10n-pt_br kdenetwork-filesharing --needed --noconfirm
pacman -S sddm-kcm partitionmanager ark kcalc kate kdeconnect kwalletmanager kde-meta-kdegraphics konsole --needed --noconfirm

pacman -S libva-intel-driver intel-ucode samba smbnetfs --needed --noconfirm
pacman -S zip unzip unrar p7zip lzop cpio nfs-utils --needed --noconfirm
pacman -S ntfs-3g dosfstools exfat-utils f2fs-tools autofs net-tools pkgfile screenfetch --needed --noconfirm
pacman -S cups cups-filters cups-pdf ghostscript gsfonts gutenprint pdfmod --needed --noconfirm
pacman -S foomatic-db foomatic-db-engine foomatic-db-nonfree foomatic-filters foomatic-db-ppds foomatic-db-nonfree-ppds hplip splix --needed --noconfirm

pacman -S aspell-pt lib32-nss sshfs ffmpegthumbs systemd-kcm cmake extra-cmake-modules dkms --needed --noconfirm
pacman -S alsa-utils xine-lib libquicktime lsdvd libstdc++5 libdvdcss mencoder transcode ifuse usbmuxd automoc4 --needed --noconfirm
pacman -S pulseaudio-alsa pulseaudio-bluetooth bluez bluez-libs bluez-utils bluez-libs bluez-firmware --needed --noconfirm

pacman -S lib32-freetype2 dvd+rw-tools cdrdao gst-plugins-good gst-libav phonon-qt4-gstreamer --needed --noconfirm
pacman -S ttf-freefont ttf-bitstream-vera ttf-dejavu ttf-liberation wqy-microhei --needed --noconfirm

pacman -S simple-scan system-config-printer print-manager filelight --needed --noconfirm
pacman -S dolphin firefox firefox-i18n-pt-br flashplugin libreoffice-fresh libreoffice-fresh-pt-BR --needed --noconfirm
## END ~ Updating system and first packages

## BEGIN ~ Other packages
pacman -S k3b blender devede gimp inkscape audacity kdenlive
pacman -S handbrake handbrake-cli soundconverter converseen amarok
pacman -S qbittorrent vlc phonon-qt5-vlc steam steam-native-runtime zsnes kmines kpatience
pacman -S clamav clamtk gufw filezilla nodejs npm virtualbox virtualbox-guest-iso linux-headers
## END ~ Other packages

## BEGIN ~ Second packages
sudo -H -u $user_name bash -c "pacaur -S wd719x-firmware aic94xx-firmware open-fuse-iso jdk"
sudo -H -u $user_name bash -c "pacaur -S ttf-ms-fonts ttf-vista-fonts hunspell-pt-br libreoffice-extension-vero rar"
sudo -H -u $user_name bash -c "pacaur -S plymouth plymouth-theme-arch-charge virtualbox-ext-oracle"
sudo -H -u $user_name bash -c "pacaur -S arc-kde-git numix-square-icon-theme-git numix-circle-icon-theme-git"
sudo -H -u $user_name bash -c "pacaur -S google-chrome visual-studio-code multibootusb octopi-git"
sudo -H -u $user_name bash -c "pacaur -S intel-xdk smartgit wakfu-transition system-config-samba downgrade"
freshclam
## END ~ Second packages

## BEGIN ~ Installing and configuring Mysql + Apache + PHP
pacman -S mariadb --needed --noconfirm && mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
systemctl start mysqld && mysql_secure_installation

pacman -S apache php php-apache php-cgi php-gd php-mcrypt php-pgsql php-sqlite php-intl phpmyadmin mysql-workbench --needed --noconfirm

sed -i 's/DocumentRoot "\/srv\/http"/DocumentRoot "\/home\/'$user_name'\/Modelos\/www"/g' /etc/httpd/conf/httpd.conf
sed -i 's/<Directory "\/srv\/http">/<Directory "\/home\/'$user_name'\/Modelos\/www">/g' /etc/httpd/conf/httpd.conf
echo -e 'Include conf/extra/phpmyadmin.conf\nInclude conf/extra/php7_module.conf' >> /etc/httpd/conf/httpd.conf
sed -i 's/LoadModule mpm_event_module/#LoadModule mpm_event_module/g' /etc/httpd/conf/httpd.conf
sed -i 's/#LoadModule mpm_prefork_module/LoadModule mpm_prefork_module/g' /etc/httpd/conf/httpd.conf
sed -i 's/mod_mpm_event.so/mod_mpm_event.so\nLoadModule php7_module modules\/libphp7.so/g' /etc/httpd/conf/httpd.conf
sed -i 's/display_errors = Off/display_errors = On/g' /etc/php/php.ini
sed -i 's/display_startup_errors = Off/display_startup_errors = On/g' /etc/php/php.ini
sed -i 's/extension=zip.so/extension=mysqli.so\nextension=mcrypt.so\nextension=pdo_mysql.so\nextension=bz2.so\nextension=zip.so\nextension=iconv.so/g' /etc/php/php.ini

echo -e 'Alias /phpmyadmin "/usr/share/webapps/phpMyAdmin"\n<Directory "/usr/share/webapps/phpMyAdmin">\n\tDirectoryIndex index.php\n\tAllowOverride All\n\tOptions FollowSymlinks\n\tRequire all granted\n</Directory>' > /etc/httpd/conf/extra/phpmyadmin.conf
## END ~ Installing and configuring Mysql + Apache + PHP

## BEGIN ~ Zswap
pacman -S systemd-swap --noconfirm
sed -i 's/zram_enabled=0/zram_enabled=1/g' /etc/systemd/swap.conf
sed -i 's/$ram_size\/4/$ram_size/g' /etc/systemd/swap.conf
## END ~ Zswap

## BEGIN ~ Configuring services + Default folders
gpasswd -a $user_name vboxusers 
gpasswd -a $user_name bumblebee
modprobe fuse && modprobe vboxdrv
dkms autoinstall 
echo -e "vboxdrv\nvboxnetadp\nvboxnetflt\nvboxpci" > /etc/modules-load.d/virtualbox.conf

systemctl enable NetworkManager
#systemctl enable avahi-daemon
systemctl enable bluetooth
#systemctl enable smbd nmbd
systemctl enable smbd.socket
systemctl enable org.cups.cupsd
#systemctl enable mysqld 
#systemctl enable httpd
systemctl enable bumblebeed
systemctl enable ufw && ufw enable
systemctl enable systemd-swap
systemctl enable sddm

systemctl disable octopi
systemctl disable dhcpcd@enp7s0

ufw allow 1714:1764/udp && ufw allow 1714:1764/tcp && ufw allow CIFS
sed -i 's/Type=oneshot/Type=idle/g' /lib/systemd/system/ufw.service
## END ~ Configuring services + Default folders

## BEGIN ~ Configuring and repairing other things
mkdir -p /home/$user_name/{Desktop,Documentos,Downloads,Imagens,Modelos/www,Músicas,Público,Vídeos}
echo -e "\nalias clean='pacaur -Scc && sudo rm -Rf /home/'$user_name'/.cache/pacaur/* && pacaur -Rns \$(pacaur -Qtdq)'" >> /home/$user_name/.bashrc
sed -i 's/function show_message/export STEAM_FRAME_FORCE_CLOSE=1\n\nfunction show_message/g' /usr/lib/steam/steam

cp /etc/samba/smb.conf.default /etc/samba/smb.conf && pdbedit -a -u $user_name
sed -i 's/\[homes\]/;\[homes\]/g' /etc/samba/smb.conf
sed -i 's/comment = Home Directories/;comment = Home Directories/g' /etc/samba/smb.conf
sed -i 's/browseable = no/;browseable = no/g' /etc/samba/smb.conf
sed -i 's/writable = yes/;writable = yes/g' /etc/samba/smb.conf

sed -i 's/IgnoreLid=false/IgnoreLid=true/g' /etc/UPower/UPower.conf
echo -e "HandleLidSwitch=ignore\nLidSwitchIgnoreInhibited=off" >> /etc/systemd/logind.conf

echo "SystemMaxUse=50M" >> /etc/systemd/journald.conf
mkdir -p /etc/systemd/coredump.conf.d/ && echo -e '[Coredump]\nStorage=none' > /etc/systemd/coredump.conf.d/custom.conf

echo -e 'Section "Device"\n\tIdentifier "Intel Graphics"\n\tDriver "intel"\n\tOption "DRI" "3"\nEndSection' > /etc/X11/xorg.conf.d/20-intel.conf

sed -i 's/HOOKS="base udev/HOOKS="base udev plymouth/g' /etc/mkinitcpio.conf
sed -i 's/encrypt /plymouth-encrypt /g' /etc/mkinitcpio.conf
sed -i 's/MODULES=""/MODULES="intel_agp i915"/g' /etc/mkinitcpio.conf
sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="/GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 splash /g' /etc/default/grub

grub-mkconfig -o /boot/grub/grub.cfg
plymouth-set-default-theme -R arch-charge
if   [ "$grub_sec" == "y" ]; then
	sed -i 's/timeout=5/timeout=0/g' /boot/grub/grub.cfg
fi
## END ~ Configuring and repairing other things

## BEGIN ~ Finishing and Some tips
pacman -Rns $(pacman -Qtdq) && pacman -Scc
mv plus/arch-menu.svg /usr/share/icons/

chown -R $user_name:users /home/$user_name
chmod 755 -R /home/$user_name/
clear && cd ~

echo "All done."

	# Nvidia settings: optirun nvidia-settings -c :8
	# Steam set game launch options (nvidia): LD_PRELOAD='/usr/lib/nvidia/libGL.so' optirun %command%
	# Wakfu java config: Parameters runtime: -Xms16384m -Xmx16384m
	# Wakfu icon steam (circle): steam_icon_215080kca
	# Tip for gtk2 theme on breeze: go to system settings > color > options and make sure 'apply colors to non-Qt colors' is switched off
## END

#!/bin/bash
#-----------------------------------------------------------------------------
# Created by arthurflor mailto: arthurflor23[at]gmail[dot]com
# Run this script after your first boot with Manjaro 17.0.1 KDE
#-----------------------------------------------------------------------------

## BEGIN ~ Collecting information
clear
echo -e "Manjaro 17.0.1 KDE ~ Install and set up some packages\n\n"

user_name=$(whoami)
echo "User name: $user_name"
read -p "Seconds to grub [0]: " grub_sec
read -p "Install Apache, MariaDB, PHP? [y]: " lampp
read -p "Install Ionic Framework? [y]: " ionic
read -p "Install systemd-swap? [y]: " swap

if   [ "$grub_sec" == "" ]; then
    grub_sec="0"
fi
## END

## BEGIN ~ Update mirrors, system and remove some default packages
sudo pacman-mirrors -g

sudo pacman -Rc digikam krita konversation qtav xine-ui kleopatra manjaro-documentation-en htop cantata yakuake --noconfirm
sudo pacman -Rc thunderbird-kde kwrite libreoffice-still jdk8-openjdk jre8-openjdk jre8-openjdk-headless --noconfirm
yaourt -Qtd

sudo pacman -Syu xf86-input-synaptics sane arc-kde libreoffice-fresh --noconfirm
## END

## BEGIN ~ Install packages (pacman)
sudo pacman -S virtualgl lib32-virtualgl frei0r-plugins lsdvd --noconfirm
sudo pacman -S clementine gimp audacity --noconfirm
sudo pacman -S converseen devede handbrake handbrake-cli soundconverter --noconfirm
sudo pacman -S steam-native zsnes kmines kpatience --noconfirm
sudo pacman -S clamav clamtk gufw nodejs npm --noconfirm
sudo pacman -S virtualbox virtualbox-host-dkms virtualbox-guest-iso virtualbox-ext-vnc 
##linux411-headers
## END

## BEGIN ~ Install packages (yaourt)
yaourt -S jdk kf5-servicemenus-encfs plasma5-applet-awesome-widgets --noconfirm
yaourt -S ttf-ms-fonts ttf-vista-fonts --noconfirm
yaourt -S hunspell-pt-br libreoffice-extension-vero --noconfirm
yaourt -S google-chrome smartgit brackets-bin --noconfirm
yaourt -S numix-icon-theme-git numix-circle-icon-theme-git numix-square-icon-theme-git
## END

## BEGIN ~ Install and set up apache, mysql, php
if   [ "$lampp" == "y" ] || [ "$lampp" == "Y" ] || [ "$lampp" == "" ]; then
    sudo pacman -S mariadb mysql-workbench apache phpmyadmin php php-apache php-cgi php-gd php-mcrypt php-pgsql php-sqlite php-intl --needed --noconfirm
    sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
    sudo systemctl start mysqld
    sudo mysql_secure_installation

    sudo sed -i 's/DocumentRoot "\/srv\/http"/DocumentRoot "\/home\/'$user_name'\/Modelos\/www"/g' /etc/httpd/conf/httpd.conf
    sudo sed -i 's/<Directory "\/srv\/http">/<Directory "\/home\/'$user_name'\/Modelos\/www">/g' /etc/httpd/conf/httpd.conf
    echo -e 'Include conf/extra/phpmyadmin.conf\nInclude conf/extra/php7_module.conf' | sudo tee --append /etc/httpd/conf/httpd.conf
    sudo sed -i 's/LoadModule mpm_event_module/#LoadModule mpm_event_module/g' /etc/httpd/conf/httpd.conf
    sudo sed -i 's/#LoadModule mpm_prefork_module/LoadModule mpm_prefork_module/g' /etc/httpd/conf/httpd.conf
    sudo sed -i 's/mod_mpm_event.so/mod_mpm_event.so\nLoadModule php7_module modules\/libphp7.so/g' /etc/httpd/conf/httpd.conf
    sudo sed -i 's/display_errors = Off/display_errors = On/g' /etc/php/php.ini
    sudo sed -i 's/extension=zip.so/extension=mysqli.so\nextension=mcrypt.so\nextension=pdo_mysql.so\nextension=bz2.so\nextension=zip.so\nextension=iconv.so/g' /etc/php/php.ini

    echo -e 'Alias /phpmyadmin "/usr/share/webapps/phpMyAdmin"\n<Directory "/usr/share/webapps/phpMyAdmin">\n\tDirectoryIndex index.php\n\tAllowOverride All\n\tOptions FollowSymlinks\n\tRequire all granted\n</Directory>' | sudo tee --append /etc/httpd/conf/extra/phpmyadmin.conf
fi
## END

## BEGIN ~ Install and set up Ionic Framework and Cordova
if   [ "$ionic" == "y" ] || [ "$ionic" == "Y" ] || [ "$ionic" == "" ]; then
    yaourt -S android-sdk android-platform android-sdk-platform-tools android-sdk-build-tools gradle
    
    sudo chown $user_name:$user_name -R /opt/android-sdk
    
    export ANDROID_HOME=/opt/android-sdk
    export PATH=$PATH:$ANDROID_HOME/tools
    
    sudo mkdir "$ANDROID_HOME/licenses"
    echo -e "8933bad161af4178b1185d1a37fbf41ea5269c55" | sudo tee --append "$ANDROID_HOME/licenses/android-sdk-license"

    sudo npm install -g ionic cordova
fi
## END


## BEGIN ~ Install and set up systemd-swap
if   [ "$swap" == "y" ] || [ "$swap" == "Y" ] || [ "$swap" == "" ]; then
    sudo pacman -S systemd-swap --noconfirm
    sudo sed -i 's/zram_enabled=0/zram_enabled=1/g' /etc/systemd/swap.conf
fi
## END

## BEGIN ~ Configuring services
sudo gpasswd -a $user_name vboxusers 
sudo gpasswd -a $user_name bumblebee
sudo modprobe fuse 
sudo modprobe vboxdrv
sudo dkms autoinstall
echo -e "vboxdrv\nvboxnetadp\nvboxnetflt\nvboxpci" | sudo tee --append /etc/modules-load.d/virtualbox.conf

sudo systemctl enable bumblebeed
sudo systemctl enable ufw && sudo ufw enable
sudo systemctl enable systemd-swap

sudo ufw allow 1714:1764/udp && sudo ufw allow 1714:1764/tcp
sudo ufw allow 6881/udp && sudo ufw allow 6881/tcp
## END

## BEGIN ~ Configuring and repairing other things
sudo sed -i 's/IgnoreLid=false/IgnoreLid=true/g' /etc/UPower/UPower.conf
echo -e "HandleLidSwitch=ignore\nLidSwitchIgnoreInhibited=off" | sudo tee --append /etc/systemd/logind.conf

echo "SystemMaxUse=50M" | sudo tee --append /etc/systemd/journald.conf
sudo mkdir -p /etc/systemd/coredump.conf.d/ && echo -e '[Coredump]\nStorage=none' | sudo tee --append /etc/systemd/coredump.conf.d/custom.conf

echo -e 'Section "Device"\n\tIdentifier "Intel Graphics"\n\tDriver "intel"\n\tOption "DRI" "3"\nEndSection' | sudo tee --append /etc/X11/xorg.conf.d/20-intel.conf

sudo sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT='$grub_sec'/g' /etc/default/grub
sudo update-grub
## END

## BEGIN ~ Configuring look-and-feel
mkdir -p /home/$user_name/{Downloads/Torrents,Modelos/{VirtualBox\ VMs,www}}

cp icons/manjaro.svg /usr/share/icons/
cp config/aw_widget_statusbarrc /home/$user_name/.local/share/awesomewidgets/configs/
sudo sed -i 's/gnome,hicolor/gnome,hicolor,breeze-dark/g' /usr/share/icons/Numix/index.theme

sudo sed -i 's/#Color/Color/g' /etc/pacman.conf
echo -e "export SAL_USE_VCLPLUGIN=gtk" | sudo tee --append /etc/profile.d/libreoffice-fresh.sh
sed -i 's/}/\t, "bb.beautify.languages": {"typescript": "js"}\n}/g' /home/$user_name/.config/Brackets/brackets.json

mkdir -p /home/$user_name/.local/share/plasma/plasmoids/
cd /home/$user_name/.local/share/plasma/plasmoids/
sudo cp -R /usr/share/plasma/plasmoids/org.kde.plasma.digitalclock/ ./
sudo chown -R $user_name:$user_name org.kde.plasma.digitalclock/
cd org.kde.plasma.digitalclock/contents/ui/
sed -i 's/main.height <= 2/main.height <= 3/g' DigitalClock.qml
sed -i ': 1 ; N ; $!b1 ; s/height: timeLabel.height/height: timeLabel.height \/ 1.2/2' DigitalClock.qml
cd ~
## END

## BEGIN ~ Finishing and Some tips
yaourt -Qtd && yaourt -Scc
sudo freshclam

echo -e "\nAll done."
    # Nvidia settings: optirun nvidia-settings -c :8
    # Steam (nvidia): LD_PRELOAD='/usr/lib/nvidia/libGL.so' optirun /usr/bin/steam %U
        # Or steam set launch game: primusrun %command%
    # Java config: Parameters runtime: -Xms8192m -Xmx8192m
## END

#!/bin/bash
#-----------------------------------------------------------------------------
# Created by arthurflor mailto: arthurflor23[at]gmail[dot]com
# Run this script after your first boot with archlinux (Anywhere)
#-----------------------------------------------------------------------------

## BEGIN ~ Collecting information

    clear
    echo -e "Arch KDE ~ Install and set up some packages\n\n"

    user_name=$(whoami)
    echo "User name: $user_name"
    read -p "Seconds to grub [0]: " grub_sec
    read -p "Install Apache, MariaDB, PHP? [y]: " lampp
    read -p "Install Ionic Framework? [y]: " ionic
    read -p "Install systemd-swap? [y]: " swap

    if   [ "$grub_sec" == "" ]; then
        grub_sec="0"
    fi
    
## END

## BEGIN ~ Updating system and first packages

    sudo sed -i 's/#Color/Color/g' /etc/pacman.conf
    sudo sed -i 's/#TotalDownload/TotalDownload/g' /etc/pacman.conf
    
    sudo localectl set-x11-keymap br abnt2
    sudo pacman -Syyu base-devel git wget --needed --noconfirm

    cd /tmp/
        git clone https://aur.archlinux.org/package-query.git
        cd package-query && makepkg -si --noconfirm && cd ..
  
        git clone https://aur.archlinux.org/yaourt.git
        cd yaourt && makepkg -si --noconfirm && cd ..

        git clone https://github.com/helmuthdu/dotfiles
        sudo sed -i 's/Java source/java/g' dotfiles/.nanorc
        sudo cp dotfiles/.bashrc dotfiles/.dircolors dotfiles/.dircolors_256 dotfiles/.nanorc ~/
        sudo cp dotfiles/.bashrc dotfiles/.dircolors dotfiles/.dircolors_256 dotfiles/.nanorc /home/$user_name/
    cd ~

    #yaourt -S xf86-video-intel xf86-input-synaptics --needed --noconfirm
    yaourt -S nvidia nvidia-utils nvidia-settings bumblebee --needed --noconfirm

    yaourt -S plasma ark kcalc kate kdeconnect kwalletmanager kdenetwork-filesharing --needed --noconfirm
    yaourt -S ksystemlog kdegraphics-thumbnailers ffmpegthumbs partitionmanager filelight spectacle --noconfirm
    yaourt -Rc discover --noconfirm

    yaourt -S dkms aspell-pt xine-lib ifuse ntfs-3g screenfetch zip p7zip rar --noconfirm
    yaourt -S gst-plugins-good gst-plugins-ugly gst-libav --noconfirm
    
    yaourt -S cups cups-filters cups-pdf --noconfirm
    yaourt -S pdfshuffler simple-scan print-manager system-config-printer --noconfirm

    yaourt -S ttf-bitstream-vera ttf-liberation ttf-ms-fonts ttf-vista-fonts --noconfirm
    
    yaourt -S firefox firefox-i18n-pt-br --noconfirm
    yaourt -S libreoffice-fresh libreoffice-fresh-pt-BR --noconfirm
    
## END

## BEGIN ~ Install packages

    yaourt -S gwenview okular vlc deepin-music qbittorrent --noconfirm
    yaourt -S gimp inkscape audacity kamoso kdenlive frei0r-plugins --noconfirm
    yaourt -S converseen soundconverter kmines kpatience --noconfirm
    yaourt -S virtualbox virtualbox-host-dkms virtualbox-guest-iso virtualbox-ext-oracle --noconfirm
    
    yaourt -S jdk hplip-plugin pamac-aur pamac-tray-appindicator --noconfirm
    yaourt -S libreoffice-extension-vero kf5-servicemenus-encfs plasma5-applet-awesome-widgets --noconfirm
    yaourt -S arc-kde-git papirus-icon-theme-git --noconfirm
    yaourt -S multibootusb google-chrome wakfu-transition --noconfirm
        
## END

## BEGIN ~ Install and set up systemd-swap

    if   [ "$swap" == "y" ] || [ "$swap" == "Y" ] || [ "$swap" == "" ]; then
        yaourt -S systemd-swap --noconfirm
        sudo sed -i 's/zram_enabled=0/zram_enabled=1/g' /etc/systemd/swap.conf
    fi

## END

## BEGIN ~ Install and set up apache, mysql, php

    if   [ "$lampp" == "y" ] || [ "$lampp" == "Y" ] || [ "$lampp" == "" ]; then
        yaourt -S mariadb dbeaver --needed --noconfirm
        
        sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
        sudo systemctl start mysqld
        sudo mysql_secure_installation

        yaourt -S apache phpmyadmin php php-apache php-cgi php-gd php-mcrypt php-pgsql php-sqlite php-intl --needed --noconfirm

        sudo sed -i 's/DocumentRoot "\/srv\/http"/DocumentRoot "\/home\/'$user_name'\/Modelos\/www"/g' /etc/httpd/conf/httpd.conf
        sudo sed -i 's/<Directory "\/srv\/http">/<Directory "\/home\/'$user_name'\/Modelos\/www">/g' /etc/httpd/conf/httpd.conf
        echo -e 'Include conf/extra/phpmyadmin.conf\nInclude conf/extra/php7_module.conf' | sudo tee --append /etc/httpd/conf/httpd.conf
        sudo sed -i 's/LoadModule mpm_event_module/#LoadModule mpm_event_module/g' /etc/httpd/conf/httpd.conf
        sudo sed -i 's/#LoadModule mpm_prefork_module/LoadModule mpm_prefork_module/g' /etc/httpd/conf/httpd.conf
        sudo sed -i 's/mod_mpm_event.so/mod_mpm_event.so\nLoadModule php7_module modules\/libphp7.so/g' /etc/httpd/conf/httpd.conf
        sudo sed -i 's/display_errors = Off/display_errors = On/g' /etc/php/php.ini
        sudo sed -i 's/extension=zip.so/extension=mysqli.so\nextension=mcrypt.so\nextension=pdo_mysql.so\nextension=bz2.so\nextension=zip.so\nextension=iconv.so/g' /etc/php/php.ini

        echo -e 'Alias /phpmyadmin "/usr/share/webapps/phpMyAdmin"\n<Directory "/usr/share/webapps/phpMyAdmin">\n\tDirectoryIndex index.php\n\tAllowOverride All\n\tOptions FollowSymlinks\n\tRequire all granted\n</Directory>' | sudo tee --append /etc/httpd/conf/extra/phpmyadmin.conf
    fi

## END

## BEGIN ~ Install and set up Ionic Framework and Cordova

    if   [ "$ionic" == "y" ] || [ "$ionic" == "Y" ] || [ "$ionic" == "" ]; then
        yaourt -S android-sdk android-platform android-sdk-platform-tools android-sdk-build-tools gradle --noconfirm
    
        sudo chown $user_name:wheel -R /opt/android-sdk
    
        export ANDROID_HOME=/opt/android-sdk
        export PATH=$PATH:$ANDROID_HOME/tools
    
        sudo mkdir "$ANDROID_HOME/licenses"
        echo -e "8933bad161af4178b1185d1a37fbf41ea5269c55" | sudo tee --append "$ANDROID_HOME/licenses/android-sdk-license"

        yaourt -S smartgit brackets-bin nodejs npm --needed --noconfirm
        sudo npm install -g nodemon cordova ionic
    fi
    
## END

## BEGIN ~ Configuring services

    sudo gpasswd -a $user_name vboxusers
    sudo gpasswd -a $user_name bumblebee
    
    sudo modprobe fuse && sudo modprobe vboxdrv
    sudo dkms autoinstall
    
    echo -e "vboxdrv\nvboxnetadp\nvboxnetflt\nvboxpci" | sudo tee --append /etc/modules-load.d/virtualbox.conf

    sudo systemctl enable bumblebeed
    #sudo systemctl enable bluetooth
    sudo systemctl enable org.cups.cupsd
    sudo systemctl enable systemd-swap
    #sudo systemctl enable mysqld httpd
    
## END

## BEGIN ~ Installation and configuration services (sharing and firewall)

    #yaourt -S samba smbnetfs
    #sudo systemctl enable smbd nmbd
    #sudo cp /etc/samba/smb.conf.default /etc/samba/smb.conf && sudo pdbedit -a -u $user_name
    #sudo sed -i 's/\[homes\]/;\[homes\]/g' /etc/samba/smb.conf
    #sudo sed -i 's/comment = Home Directories/;comment = Home Directories/g' /etc/samba/smb.conf
    #sudo sed -i 's/browseable = no/;browseable = no/g' /etc/samba/smb.conf
    #sudo sed -i 's/writable = yes/;writable = yes/g' /etc/samba/smb.conf
    
    #yaourt -S ufw gufw
    #sudo systemctl enable ufw && sudo ufw enable
    #sudo ufw allow 1714:1764/udp
    #sudo ufw allow 1714:1764/tcp
    #sudo ufw allow qBittorrent
    #sudo ufw reload

## END

## BEGIN ~ Configuring and repairing other things

    mkdir -p /home/$user_name/{Downloads/Torrents,Modelos/{VirtualBox\ VMs,www}}

    sudo cp -R MenuKDE/ /usr/share/icons/

    mkdir -p /home/$user_name/.local/share/awesomewidgets/configs/
    cp extra/aw_widget_statusbarrc /home/$user_name/.local/share/awesomewidgets/configs/

    echo -e "export SAL_USE_VCLPLUGIN=gtk" | sudo tee --append /etc/profile.d/libreoffice-fresh.sh
    
## END

## BEGIN ~ Configuring and repairing other things

    sudo sed -i 's/IgnoreLid=false/IgnoreLid=true/g' /etc/UPower/UPower.conf
    echo -e "HandleLidSwitch=ignore\nLidSwitchIgnoreInhibited=off" | sudo tee --append /etc/systemd/logind.conf

    echo "SystemMaxUse=50M" | sudo tee --append /etc/systemd/journald.conf
    
    sudo mkdir -p /etc/systemd/coredump.conf.d/
    echo -e '[Coredump]\nStorage=none' | sudo tee --append /etc/systemd/coredump.conf.d/custom.conf

    echo -e 'Section "Device"\n\tIdentifier "Intel Graphics"\n\tDriver "intel"\n\tOption "DRI" "3"\nEndSection' | sudo tee --append /etc/X11/xorg.conf.d/20-intel.conf
    
    sudo sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT=""/GRUB_CMDLINE_LINUX_DEFAULT="quiet loglevel=3"/g' /etc/default/grub
    sudo sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT='$grub_sec'/g' /etc/default/grub
    
    sudo grub-mkconfig -o /boot/grub/grub.cfg
        
## END

## BEGIN ~ Configuring look-and-feel arc-dark

    mkdir -p /home/$user_name/.local/share/plasma/plasmoids/
    cd /home/$user_name/.local/share/plasma/plasmoids/
        sudo cp -R /usr/share/plasma/plasmoids/org.kde.plasma.digitalclock/ ./
        sudo chown -R $user_name:wheel org.kde.plasma.digitalclock/
        cd org.kde.plasma.digitalclock/contents/ui/
        sed -i 's/main.height <= 2/main.height <= 3/g' DigitalClock.qml
        sed -i ': 1 ; N ; $!b1 ; s/height: timeLabel.height/height: timeLabel.height \/ 1.2/2' DigitalClock.qml
    cd ~

    sudo sed -i 's/ubuntu-mono-dark,Mint-X,elementary,gnome,//g' /usr/share/icons/Papirus/index.theme
    sudo sed -i 's/ubuntu-mono-dark,Mint-X,elementary,gnome,//g' /usr/share/icons/Papirus-Dark/index.theme
    sudo sed -i 's/ubuntu-mono-dark,Mint-X,elementary,gnome,//g' /usr/share/icons/Papirus-Light/index.theme
    
## END

## BEGIN ~ Finishing and Some tips

    yaourt -Qtd && yaourt -Scc

    echo -e "\nAll done."
        # Nvidia settings: optirun nvidia-settings -c :8
        # Steam (nvidia): LD_PRELOAD='/usr/lib/nvidia/libGL.so' optirun /usr/bin/steam %U
            # Or steam set launch game: primusrun %command%
        # Java config: Parameters runtime: -Xms8192m -Xmx8192m
        
## END

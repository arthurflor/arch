#!/bin/bash
#--------------------------------------------------------------------
# Run this script after your first boot with archlinux (Anywhere)
#--------------------------------------------------------------------

## BEGIN ~ Collecting information

    clear
    echo -e "Arch Gnome ~ Install and set up some packages\n\n"

    user_name=$(whoami)
    echo "User name: $user_name"
    read -p "Seconds to grub [0]: " grub_sec

    read -p "Install Development Web Kit? [y]: " ionic
    read -p "Install Apache, MariaDB, PHP? [y]: " lampp
    read -p "Install JavaEE? [y]: " javaee
    dev="n"

    if   [ "$grub_sec" == "" ]; then
        grub_sec="0"
    fi

## END

## BEGIN ~ Updating system and packages

    sudo sed -i 's/#Color/Color/g' /etc/pacman.conf
    sudo sed -i 's/#TotalDownload/TotalDownload/g' /etc/pacman.conf

    sudo localectl set-x11-keymap br abnt2
    echo -e "en_US.UTF-8 UTF-8" | sudo tee --append /etc/locale.gen && sudo locale-gen
    echo -e 'QT_AUTO_SCREEN_SCALE_FACTOR=0' | sudo tee --append /etc/environment

    sudo mkdir -p /etc/systemd/coredump.conf.d/
    echo -e '[Coredump]\nStorage=none' | sudo tee --append /etc/systemd/coredump.conf.d/custom.conf
    echo "SystemMaxUse=50M" | sudo tee --append /etc/systemd/journald.conf

    sudo sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT=""/GRUB_CMDLINE_LINUX_DEFAULT="quiet loglevel=3"/g' /etc/default/grub
    sudo sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT='$grub_sec'/g' /etc/default/grub
    sudo grub-mkconfig -o /boot/grub/grub.cfg

    mkdir -p /home/$user_name/{Downloads/Torrents,Documentos/VirtualBox\ VMs}
    sudo cp -R ./icons/* /usr/share/icons/

    mkdir -p /home/$user_name/.local/share/gnome-shell/extensions/
    sudo mv /usr/share/gnome-shell/extensions/* /home/$user_name/.local/share/gnome-shell/extensions/
    sudo chown $user_name:users -R /home/$user_name/.local/share/gnome-shell/extensions/

    sudo pacman -Syyu pacman-contrib base-devel git wget --needed --noconfirm
    cd /tmp
        git clone https://aur.archlinux.org/package-query.git
        git clone https://aur.archlinux.org/yaourt.git
        cd package-query && makepkg -si --noconfirm && cd ./../yaourt && makepkg -si --noconfirm
    cd ~

    echo -e '\nalias search="yaourt -Ss"' | sudo tee --append ~/.bashrc
    echo -e 'alias install="yaourt -S"' | sudo tee --append ~/.bashrc
    echo -e 'alias remove="yaourt -Rcc"' | sudo tee --append ~/.bashrc
    echo -e 'alias update="yaourt -Syau"' | sudo tee --append ~/.bashrc
    echo -e 'alias clear="yaourt -Scc && yaourt -Qtd"' | sudo tee --append ~/.bashrc
    echo -e 'alias devel-update="yaourt -Syu --devel --noconfirm --needed"' | sudo tee --append ~/.bashrc

    yaourt -Rcc evolution evolution-data-server gnome-{extra,software} --noconfirm
    yaourt -Syau gnome-{mines,multi-writer,nettool,power-manager,usage,tweaks} --needed --noconfirm
    
    yaourt -S nvidia nvidia-utils nvidia-settings bumblebee --needed --noconfirm
    yaourt -S tlp net-tools sshfs ifuse ntfs-3g neofetch p7zip unrar gst-plugins-ugly gst-libav --noconfirm
    yaourt -S bluez bluez-libs bluez-hid2hci bluez-utils bluez-plugins bluez-tools --needed --noconfirm
    yaourt -S wd719x-firmware aic94xx-firmware bluez-firmware --needed --noconfirm

    yaourt -S ttf-bitstream-vera ttf-liberation ttf-ms-fonts --needed --noconfirm
    yaourt -S cups cups-filters cups-pdf hplip-plugin --noconfirm
    yaourt -S simple-scan system-config-printer pdfshuffler --noconfirm
    yaourt -S jdk8 alacarte nautilus-share nautilus-sendto openssh keepassxc --noconfirm

    yaourt -S steam wakfu-transition aisleriot --noconfirm
    yaourt -S google-chrome chrome-gnome-shell pamac-aur --noconfirm
    yaourt -S firefox firefox-i18n-pt-br hunspell-pt-br --noconfirm
    yaourt -S libreoffice-fresh libreoffice-fresh-pt-br libreoffice-extension-languagetool  --noconfirm

    yaourt -S adapta-gtk-theme la-capitaine-icon-theme --noconfirm
    # yaourt -S python-numpy python-matplotlib python-pillow --noconfirm
    yaourt -S transmission-gtk vlc inkscape gimp gimp-plugin-registry audacity pitivi --noconfirm
    #yaourt -S virtualbox virtualbox-host-dkms virtualbox-guest-iso virtualbox-ext-oracle --noconfirm

## END

## BEGIN ~ Install and set up Ionic Framework and Cordova

    if   [ "$ionic" == "y" ] || [ "$ionic" == "Y" ] || [ "$ionic" == "" ]; then
        dev="y"
        yaourt -S visual-studio-code-bin android-studio android-tools android-udev gradle nodejs npm --noconfirm
        sudo npm i -g cordova ionic @angular/cli typescript typescript-formatter

        sudo mkdir /opt/android-sdk
        sudo chown $user_name:wheel -R /opt/android-sdk

        export ANDROID_HOME=/opt/android-sdk
        echo -e 'export ANDROID_HOME=/opt/android-sdk' | sudo tee --append /etc/environment

        ## $ANDROID_HOME/tools/bin/sdkmanager --licenses
    fi

## END

## BEGIN ~ Install and set up apache, mysql, php

    if   [ "$lampp" == "y" ] || [ "$lampp" == "Y" ] || [ "$lampp" == "" ]; then
        dev="y"
        yaourt -S mariadb apache phpmyadmin php php-{apache,cgi,gd,pgsql,sqlite,intl} --needed --noconfirm

        sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
        sudo systemctl start mysqld
        sudo mysql_secure_installation

        sudo sed -i 's/DocumentRoot "\/srv\/http"/DocumentRoot "\/home\/'$user_name'\/Projetos\/"/g' /etc/httpd/conf/httpd.conf
        sudo sed -i 's/<Directory "\/srv\/http">/<Directory "\/home\/'$user_name'\/Projetos\/">/g' /etc/httpd/conf/httpd.conf
        echo -e 'Include conf/extra/php7_module.conf' | sudo tee --append /etc/httpd/conf/httpd.conf
        sudo sed -i 's/LoadModule mpm_event_module/#LoadModule mpm_event_module/g' /etc/httpd/conf/httpd.conf
        sudo sed -i 's/#LoadModule mpm_prefork_module/LoadModule mpm_prefork_module/g' /etc/httpd/conf/httpd.conf
        sudo sed -i 's/mod_mpm_event.so/mod_mpm_event.so\nLoadModule php7_module modules\/libphp7.so/g' /etc/httpd/conf/httpd.conf
        sudo sed -i 's/display_errors = Off/display_errors = On/g' /etc/php/php.ini
        sudo sed -i 's/extension=zip.so/extension=mysqli.so\nextension=mcrypt.so\nextension=pdo_mysql.so\nextension=bz2.so\nextension=zip.so\nextension=iconv.so/g' /etc/php/php.ini

        sudo sed -i 's/User http/User '$user_name'/g' /etc/httpd/conf/httpd.conf

        echo -e 'Include conf/extra/phpmyadmin.conf' | sudo tee --append /etc/httpd/conf/httpd.conf
        echo -e 'Alias /phpmyadmin "/usr/share/webapps/phpMyAdmin"\n<Directory "/usr/share/webapps/phpMyAdmin">\n\tDirectoryIndex index.php\n\tAllowOverride All\n\tOptions FollowSymlinks\n\tRequire all granted\n</Directory>' | sudo tee --append /etc/httpd/conf/extra/phpmyadmin.conf
    fi

## END

## BEGIN ~ Install java ee

    if   [ "$javaee" == "y" ] || [ "$javaee" == "Y" ] || [ "$javaee" == "" ]; then
        dev="y"
        yaourt -S netbeans tomcat8 --noconfirm

        sudo gpasswd --add $user_name tomcat8
        sudo chown root:tomcat8 -R /usr/share/tomcat8/
        sudo sed -i 's/<\/tomcat-users>/<role rolename="tomcat"\/>\n<user username="tomcat" password="123" roles="tomcat,manager-script"\/>\n<\/tomcat-users>/g' /usr/share/tomcat8/conf/tomcat-users.xml

        mkdir -p /home/$user_name/.netbeans/8.2/config/Preferences/org/netbeans/modules/
        echo -e "projectsFolder=/home/"$user_name"/Projetos/" > /home/$user_name/.netbeans/8.2/config/Preferences/org/netbeans/modules/projectui.properties
    fi

## END

## BEGIN ~ Dev

    if   [ "$dev" == "y" ]; then
        yaourt -S filezilla dbeaver smartgit --noconfirm
    fi

## END

## BEGIN ~ Configuring

    echo -e "export SAL_USE_VCLPLUGIN=gtk" | sudo tee --append /etc/profile.d/libreoffice-fresh.sh
    sudo chown $user_name:wheel -R /opt/ankama/

    mkdir -p /home/$user_name/.config/autostart/
    echo -e "[Desktop Entry]\nType=Application\nName=transmission-gtk\nExec=transmission-gtk -m" > /home/$user_name/.config/autostart/transmission-gtk.desktop
    echo -e "[Desktop Entry]\nType=Application\nName=plank\nExec=plank" > /home/$user_name/.config/autostart/plank.desktop

    sudo gpasswd -a $user_name bumblebee
    sudo gpasswd -a $user_name http
    sudo gpasswd -a $user_name games
    sudo gpasswd -a $user_name input
    sudo usermod -a $user_name video 

    sudo systemctl enable bumblebeed
    sudo systemctl enable org.cups.cupsd
    sudo systemctl enable tlp.service
    sudo systemctl enable tlp-sleep.service

    echo -e 'mouse:usb:v045ep0040:name:*:\nMOUSE_DPI=400@125' | sudo tee --append  /etc/udev/hwdb.d/71-mouse-local.hwdb
    echo -e 'Section "InputClass"\n\tIdentifier "pointer stuff"\n\tMatchIsPointer "on"\n\tOption "TransformationMatrix" "1 0 0 0 1 0 0 0 0.6"\nEndSection' | sudo tee --append /etc/X11/xorg.conf.d/99-pointer-speed.conf
    sudo udevadm hwdb --update && sudo udevadm trigger /dev/input/event0

## END

## BEGIN ~ Old configs

    # yaourt -S plank libinput-gestures gtk-theme-macos-sierra-archers-git

    # libinput-gestures-setup autostart
    # sudo sed -i 's/gesture/#gesture/g' /etc/libinput-gestures.conf
    # echo -e 'gesture swipe up     xdotool key super+s' | sudo tee --append /etc/libinput-gestures.conf
    # echo -e 'gesture swipe right  xdotool key super+Page_Down' | sudo tee --append /etc/libinput-gestures.conf
    # echo -e 'gesture swipe down   xdotool key super+a' | sudo tee --append /etc/libinput-gestures.conf
    # echo -e 'gesture swipe left   xdotool key super+Page_Up' | sudo tee --append /etc/libinput-gestures.conf

## END

## BEGIN ~ Finishing and Some tips

    yaourt -Qtd
    yaourt -Scc
    yaourt -Syu

    echo -e "\nAll done."

    ## -- | shorcuts | --
    # print   : gnome-screenshot --interactive
    # terminal: gnome-terminal
    # monitor : gnome-system-monitor
    # xkill   : xkill
    # nautilus: nautilus --new-window %U
    # desktop : Ocultar todas as janelas normais

    ## -- | extensions | --
    # Activities Configurator
    # Add Username to Top Panel
    # AlternateTab
    # Arch Linux Updates Indicator
    # Auto Move Windows
    # Clipboard Indicator
    # Dash to Dock
    # Dynamic Battery
    # GSConnect
    # OpenWeather
    # Panel OSD
    # Refresh Wifi Connections
    # Removable Drive Menu
    # Remove Dash
    # Remove Dropdown Arrows
    # Sound Input & Output Device Chooser
    # Status Area Horizontal Spacing
    # TopIcons
    # User Themes

    ## -- | extra | --
    # Java config: Parameters runtime: -Xms4096m -Xmx4096m
    # nvidia settings: optirun nvidia-settings -c :8
    # Steam (nvidia): LD_PRELOAD='/usr/lib/nvidia/libGL.so' optirun %command%

## END
